events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;

    server {
        listen 80;
        server_name localhost;

        root /usr/share/nginx/html;
        index index.html;

        # Health check endpoint
        location /public/health {
            return 200 '{"status":"healthy","service":"demo-backend","timestamp":"$time_iso8601"}';
            add_header Content-Type application/json;
        }

        # Public API endpoints
        location /public/ {
            try_files $uri $uri/ =404;
        }

        # Protected API endpoints (requires authentication via gateway)
        location /api/v1/ {
            return 200 '{"message":"Protected resource accessed","user":"$http_x_user_id","timestamp":"$time_iso8601"}';
            add_header Content-Type application/json;
        }

        # Default route
        location / {
            try_files $uri $uri/ /index.html;
        }

        # Add CORS headers
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, X-Requested-With' always;
        
        if ($request_method = 'OPTIONS') {
            return 204;
        }
    }
}
